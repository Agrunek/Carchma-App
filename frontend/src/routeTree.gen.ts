/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VerifyEmailCodeRouteImport } from './routes/verify-email/$code/route'

// Create Virtual Routes

const RegisterRouteLazyImport = createFileRoute('/register')()
const LoginRouteLazyImport = createFileRoute('/login')()
const IndexRouteLazyImport = createFileRoute('/')()

// Create/Update Routes

const RegisterRouteLazyRoute = RegisterRouteLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/register/route.lazy').then((d) => d.Route),
)

const LoginRouteLazyRoute = LoginRouteLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/route.lazy').then((d) => d.Route))

const IndexRouteLazyRoute = IndexRouteLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index/route.lazy').then((d) => d.Route))

const VerifyEmailCodeRouteRoute = VerifyEmailCodeRouteImport.update({
  id: '/verify-email/$code',
  path: '/verify-email/$code',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/verify-email/$code/route.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/verify-email/$code': {
      id: '/verify-email/$code'
      path: '/verify-email/$code'
      fullPath: '/verify-email/$code'
      preLoaderRoute: typeof VerifyEmailCodeRouteImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRouteLazyRoute
  '/login': typeof LoginRouteLazyRoute
  '/register': typeof RegisterRouteLazyRoute
  '/verify-email/$code': typeof VerifyEmailCodeRouteRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRouteLazyRoute
  '/login': typeof LoginRouteLazyRoute
  '/register': typeof RegisterRouteLazyRoute
  '/verify-email/$code': typeof VerifyEmailCodeRouteRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRouteLazyRoute
  '/login': typeof LoginRouteLazyRoute
  '/register': typeof RegisterRouteLazyRoute
  '/verify-email/$code': typeof VerifyEmailCodeRouteRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/register' | '/verify-email/$code'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/register' | '/verify-email/$code'
  id: '__root__' | '/' | '/login' | '/register' | '/verify-email/$code'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRouteLazyRoute: typeof IndexRouteLazyRoute
  LoginRouteLazyRoute: typeof LoginRouteLazyRoute
  RegisterRouteLazyRoute: typeof RegisterRouteLazyRoute
  VerifyEmailCodeRouteRoute: typeof VerifyEmailCodeRouteRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRouteLazyRoute: IndexRouteLazyRoute,
  LoginRouteLazyRoute: LoginRouteLazyRoute,
  RegisterRouteLazyRoute: RegisterRouteLazyRoute,
  VerifyEmailCodeRouteRoute: VerifyEmailCodeRouteRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/register",
        "/verify-email/$code"
      ]
    },
    "/": {
      "filePath": "index/route.lazy.tsx"
    },
    "/login": {
      "filePath": "login/route.lazy.tsx"
    },
    "/register": {
      "filePath": "register/route.lazy.tsx"
    },
    "/verify-email/$code": {
      "filePath": "verify-email/$code/route.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
